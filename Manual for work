INDEX
1. STATEMENT OF PURPOSE
2. REQUIRMENTS
    -2.1
    -2.2
3. DOCUMENTATION
    -3.1
    -3.2
4. QUALITY ASSURANCE
    -4.1
    -4.2
5. POINTS OF CONTACT
6. PAYMENTS
7. WARRANTY AND RESPONSIBILITY
8. NON-DISCLOSURE AGREEMENT
9. OWNERSHIP
10. TIME
11. REPORTS
____________________________________________________________________________________

1. STATEMENT OF PURPOSE

    First of all. -Quality is what matter the most-
    The purpose of this manual is to ensure and safeguard the quality and coding standards of the project.

____________________________________________________________________________________

2. REQUIRMENTS

    2.1 When working with the project all the recommendations, instructions and specifications in the listed documents must 
    be met.
    The documents complement each other.
    If the documents have conflicting data or information, unless circumstances clearly dictate to others, apply the following 
    order:
        1. Specification of work - Freelancer.com
        2. Manual for programming (this document) Including all instructions and documents linked in this document.

    2.2 Further Instructions.
        1. Code must be formatted in a strict manner. Great care must be taken to ensure easy maintaining and understanding 
        of code.
        2. The code should if possible be self-explanatory.
        3. Comments (in code) must be made in any situation where the purpose of the written code isn't immediately apperent.
        4. Great care must be taken to avoid the use of unsupported, old or inadequately documented libraries or any written or prewritten code with 
        dependencies. (See also https://en.wikipedia.org/wiki/Dependency_hell).

    To ensure that all requirements are met, all work will be reviewed by quality expert.

____________________________________________________________________________________

3. DOCUMENTATION
     
    3.1  The files of the project must maintain perfect Github workflow.
        1. Work and code should on a daily basis be pushed to Github with _exhaustive_ comments.
        
     3.2 Pushing files to Github _main_ branch is _always_ done by Github repository owner. 
        1. Worker/developer/programmer do not push files to main branch or folder.
        2. Worker/developer/programmer do push files to experimental/development branch or folder.
        
    Github Guides - Understanding the GitHub Flow:
    "Whenever you add, edit, or delete a file, you're making a commit, and adding them to your branch. This process of 
    adding commits keeps track of your progress as you work on a feature branch. Commits also create a transparent history
    of your work that others can follow to understand what you've done and why. Each commit has an associated commit message, 
    which is a description explaining why a particular change was made. Furthermore, each commit is considered a separate 
    unit of change. This lets you roll back changes if a bug is found, or if you decide to head in a different direction."
    
    All the recommendations, instructions and specifications in the listed documents must be met:
        1. GitHub Guides (https://guides.github.com/) Including all documents linked in this portal.

    To ensure that all requirements are met, all work will be reviewed by quality expert.

____________________________________________________________________________________

4. QUALITY ASSURANCE

    4.1 Testing must be done according to a testplan.
    The worker/developer/programmer is responsible for creating a testplan matching the project scope.
    
    4.2 The worker/developer/programmer is responsible for a bug free product. This includes wide scale testing to find and
    eliminate bugs. Bugs of importance found are to be documented and should be put on Github Issues 
    (https://github.com/trep-kalkyl/*****/issues) with label Bugs.

    To ensure that all requirements are met, all work will be reviewed by quality expert.

____________________________________________________________________________________

5. POINTS OF CONTACT

    Communication needs to be in english or in swedish.
    Communication of importance should be put on Github Issues 
    (https://github.com/trep-kalkyl/*****/issues) with suitable label.
    General discussion takes place on Freelancer.

____________________________________________________________________________________

6. PAYMENTS

    Payments will be made according to agreement.
    Work that does not achieve the requirements found in this document will not be paid for.
    Final payment or milestone will only be made after work has been reviewed by quality expert.

____________________________________________________________________________________

7. WARRANTY AND RESPONSIBILITY

    Warranty and responsibility for work done are 6 months from last payment (also see 4.2).
    Bugs or errors found during this period must be fixed rapidly (3-4 days).
     
____________________________________________________________________________________

8. NON-DISCLOSURE AGREEMENT

    Worker/developer/programmer must accept the terms in the following document:
    https://github.com/trep-kalkyl/trep-developer-wiki/blob/master/NDA
    
____________________________________________________________________________________

10. OWNERSHIP 

    The owner and copyright holder for the Intellectual Property and all files created are, without exceptions, Emil Appelkvist.
    Every file created within the project must contain these tags:

/*
* @version		    x.X.X
* @copyright	    Emil Appelkvist
* @owner          Emil Appelkvist
* @author		      Worker/developer/programmer name, company and email
* @license		    Proprietary software
*/
____________________________________________________________________________________


10. TIME

    According to agreement. 

____________________________________________________________________________________

11. REPORTS

    Worker/developer/programmer should report on a regular basis. 
    Every tuesday and every friday.
    These things are to be reported (also see 5. POINTS OF CONTACT):
    -Work done since last report
    -Hours spent on project as a total
    -Questions needed to be answered rapidly
    
    Worker/developer/programmer is responsible to send report on time.
    
____________________________________________________________________________________
